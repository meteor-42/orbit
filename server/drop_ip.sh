#!/bin/bash

remove=0
ip_list=()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ IPv6
is_ipv6() {
  [[ "$1" == *:* ]]
}

# –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥—Å–µ—Ç—å –¥–ª—è IPv4 (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é /24)
ipv4_to_subnet() {
  local ip="$1"
  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º IP –≤ —Å–µ—Ç—å —Å –º–∞—Å–∫–æ–π /24
  echo "${ip%.*}.0/24"
}

# –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥—Å–µ—Ç—å –¥–ª—è IPv6 (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é /112)
ipv6_to_subnet() {
  local ip="$1"
  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º IP –≤ —Å–µ—Ç—å —Å –º–∞—Å–∫–æ–π /112
  echo "${ip%:*}:0/112"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞
drop_rule() {
  local ip="$1"
  local action="$2"
  local table
  local subnet

  if is_ipv6 "$ip"; then
    table="ip6tables"
    subnet=$(ipv6_to_subnet "$ip")
  else
    table="iptables"
    subnet=$(ipv4_to_subnet "$ip")
  fi

  if sudo $table -C INPUT -s "$subnet" -j DROP 2>/dev/null; then
    if [[ "$action" == "add" ]]; then
      echo "‚ö†Ô∏è  –ü—Ä–∞–≤–∏–ª–æ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ($table): $subnet"
    else
      if sudo $table -D INPUT -s "$subnet" -j DROP; then
        echo "‚úÖ –£–¥–∞–ª–µ–Ω–æ DROP-–ø—Ä–∞–≤–∏–ª–æ –¥–ª—è $subnet ($table)"
      else
        echo "‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è $subnet ($table)"
      fi
    fi
  else
    if [[ "$action" == "add" ]]; then
      if sudo $table -I INPUT 1 -s "$subnet" -j DROP; then
        echo "‚úÖ –ü–æ–¥—Å–µ—Ç—å $subnet –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ DROP ($table)"
      else
        echo "‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è $subnet ($table)"
      fi
    else
      echo "‚ö†Ô∏è  –ù–µ—Ç —Ç–∞–∫–æ–≥–æ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è $subnet ($table)"
    fi
  fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤—Å–µ—Ö DROP-–ø—Ä–∞–≤–∏–ª
list_drop_rules() {
  for table in iptables ip6tables; do
    label=$([[ "$table" == "iptables" ]] && echo "IPv4" || echo "IPv6")
    echo "üìã DROP-–ø—Ä–∞–≤–∏–ª–∞ ($label):"
    if ! sudo $table -L INPUT -n --line-numbers | grep DROP; then
      echo "üö´ DROP-–ø—Ä–∞–≤–∏–ª –Ω–µ –Ω–∞–π–¥–µ–Ω–æ ($label)"
    fi
  done
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
while [[ $# -gt 0 ]]; do
  case "$1" in
    --remove)
      remove=1
      shift
      ;;
    --file)
      file="$2"
      if [[ ! -f "$file" ]]; then
        echo "‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $file"
        exit 1
      fi
      while IFS= read -r line; do
        [[ "$line" =~ ^#.*$ || -z "$line" ]] && continue
        ip_list+=("$line")
      done < "$file"
      shift 2
      ;;
    *)
      ip_list+=("$1")
      shift
      ;;
  esac
done

# –ï—Å–ª–∏ –Ω–µ—Ç IP ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–∞–≤–∏–ª
if [[ "${#ip_list[@]}" -eq 0 ]]; then
  list_drop_rules
  exit 0
fi

# –ü—Ä–∏–º–µ–Ω—è–µ–º –ø—Ä–∞–≤–∏–ª–æ –∫–æ –≤—Å–µ–º IP
for ip in "${ip_list[@]}"; do
  drop_rule "$ip" "$([[ "$remove" -eq 1 ]] && echo "remove" || echo "add")"
done#!/bin/bash

remove=0
ip_list=()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ IPv6
is_ipv6() {
  [[ "$1" == *:* ]]
}

# –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥—Å–µ—Ç—å –¥–ª—è IPv4 (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é /24)
ipv4_to_subnet() {
  local ip="$1"
  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º IP –≤ —Å–µ—Ç—å —Å –º–∞—Å–∫–æ–π /24
  echo "${ip%.*}.0/24"
}

# –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥—Å–µ—Ç—å –¥–ª—è IPv6 (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é /112)
ipv6_to_subnet() {
  local ip="$1"
  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º IP –≤ —Å–µ—Ç—å —Å –º–∞—Å–∫–æ–π /112
  echo "${ip%:*}:0/112"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞
drop_rule() {
  local ip="$1"
  local action="$2"
  local table
  local subnet

  if is_ipv6 "$ip"; then
    table="ip6tables"
    subnet=$(ipv6_to_subnet "$ip")
  else
    table="iptables"
    subnet=$(ipv4_to_subnet "$ip")
  fi

  if sudo $table -C INPUT -s "$subnet" -j DROP 2>/dev/null; then
    if [[ "$action" == "add" ]]; then
      echo "‚ö†Ô∏è  –ü—Ä–∞–≤–∏–ª–æ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ($table): $subnet"
    else
      if sudo $table -D INPUT -s "$subnet" -j DROP; then
        echo "‚úÖ –£–¥–∞–ª–µ–Ω–æ DROP-–ø—Ä–∞–≤–∏–ª–æ –¥–ª—è $subnet ($table)"
      else
        echo "‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è $subnet ($table)"
      fi
    fi
  else
    if [[ "$action" == "add" ]]; then
      if sudo $table -I INPUT 1 -s "$subnet" -j DROP; then
        echo "‚úÖ –ü–æ–¥—Å–µ—Ç—å $subnet –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ DROP ($table)"
      else
        echo "‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è $subnet ($table)"
      fi
    else
      echo "‚ö†Ô∏è  –ù–µ—Ç —Ç–∞–∫–æ–≥–æ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è $subnet ($table)"
    fi
  fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤—Å–µ—Ö DROP-–ø—Ä–∞–≤–∏–ª
list_drop_rules() {
  for table in iptables ip6tables; do
    label=$([[ "$table" == "iptables" ]] && echo "IPv4" || echo "IPv6")
    echo "üìã DROP-–ø—Ä–∞–≤–∏–ª–∞ ($label):"
    if ! sudo $table -L INPUT -n --line-numbers | grep DROP; then
      echo "üö´ DROP-–ø—Ä–∞–≤–∏–ª –Ω–µ –Ω–∞–π–¥–µ–Ω–æ ($label)"
    fi
  done
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
while [[ $# -gt 0 ]]; do
  case "$1" in
    --remove)
      remove=1
      shift
      ;;
    --file)
      file="$2"
      if [[ ! -f "$file" ]]; then
        echo "‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $file"
        exit 1
      fi
      while IFS= read -r line; do
        [[ "$line" =~ ^#.*$ || -z "$line" ]] && continue
        ip_list+=("$line")
      done < "$file"
      shift 2
      ;;
    *)
      ip_list+=("$1")
      shift
      ;;
  esac
done

# –ï—Å–ª–∏ –Ω–µ—Ç IP ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–∞–≤–∏–ª
if [[ "${#ip_list[@]}" -eq 0 ]]; then
  list_drop_rules
  exit 0
fi

# –ü—Ä–∏–º–µ–Ω—è–µ–º –ø—Ä–∞–≤–∏–ª–æ –∫–æ –≤—Å–µ–º IP
for ip in "${ip_list[@]}"; do
  drop_rule "$ip" "$([[ "$remove" -eq 1 ]] && echo "remove" || echo "add")"
done