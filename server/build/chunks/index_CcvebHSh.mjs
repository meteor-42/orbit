import { c as createComponent, m as maybeRenderHead, u as unescapeHTML, a as renderTemplate } from './astro/server_ckp-fZ9W.mjs';
import 'clsx';

const html = "<h2 id=\"prerequisites\">Prerequisites</h2>\n<p>Before installing WireGuard, make sure you are running:</p>\n<ul>\n<li>Ubuntu <strong>22.04.5 LTS (Jammy Jellyfish)</strong></li>\n<li>A user with <code>sudo</code> privileges</li>\n<li>Internet access</li>\n</ul>\n<p>You can verify your system version with:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\"><code><span class=\"line\"><span>lsb_release -a</span></span>\n<span class=\"line\"><span></span></span></code></pre>\n<h2 id=\"installing-wireguard\">Installing WireGuard</h2>\n<p>Run the following commands to install WireGuard from the official Ubuntu repositories:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\"><code><span class=\"line\"><span>apt update</span></span>\n<span class=\"line\"><span>apt install wireguard -y</span></span>\n<span class=\"line\"><span></span></span></code></pre>\n<p>Verify installation:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\"><code><span class=\"line\"><span>wg --version</span></span>\n<span class=\"line\"><span></span></span></code></pre>\n<h2 id=\"generating-keys\">Generating Keys</h2>\n<p>WireGuard uses public/private key pairs. Generate them:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\"><code><span class=\"line\"><span>wg genkey | tee privatekey | wg pubkey > publickey</span></span>\n<span class=\"line\"><span></span></span></code></pre>\n<h2 id=\"configuring-the-server\">Configuring the Server</h2>\n<p>Create the main config file at <code>/etc/wireguard/wg0.conf</code>:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\"><code><span class=\"line\"><span>[Interface]</span></span>\n<span class=\"line\"><span>Address = 10.0.0.1/24</span></span>\n<span class=\"line\"><span>PrivateKey = &#x3C;your-server-private-key></span></span>\n<span class=\"line\"><span>ListenPort = 51820</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>[Peer]</span></span>\n<span class=\"line\"><span>PublicKey = &#x3C;client-public-key></span></span>\n<span class=\"line\"><span>AllowedIPs = 10.0.0.2/32</span></span>\n<span class=\"line\"><span></span></span></code></pre>\n<p>Set correct permissions:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\"><code><span class=\"line\"><span>chmod 600 /etc/wireguard/wg0.conf</span></span>\n<span class=\"line\"><span></span></span></code></pre>\n<h2 id=\"enabling-ip-forwarding\">Enabling IP Forwarding</h2>\n<p>Edit <code>/etc/sysctl.conf</code> and uncomment the following line:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\"><code><span class=\"line\"><span>net.ipv4.ip_forward=1</span></span>\n<span class=\"line\"><span></span></span></code></pre>\n<p>Apply it immediately:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\"><code><span class=\"line\"><span>sysctl -w net.ipv4.ip_forward=1</span></span>\n<span class=\"line\"><span></span></span></code></pre>\n<h2 id=\"configuring-ufw-firewall\">Configuring UFW (Firewall)</h2>\n<h3 id=\"1-allow-ssh-and-wireguard-port\">1. Allow SSH and WireGuard port:</h3>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\"><code><span class=\"line\"><span>ufw allow OpenSSH</span></span>\n<span class=\"line\"><span>ufw allow 51820/udp</span></span>\n<span class=\"line\"><span></span></span></code></pre>\n<h3 id=\"2-enable-forwarding-in-ufw\">2. Enable forwarding in UFW:</h3>\n<p>Edit <code>/etc/default/ufw</code>:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\"><code><span class=\"line\"><span>DEFAULT_FORWARD_POLICY=\"ACCEPT\"</span></span>\n<span class=\"line\"><span></span></span></code></pre>\n<h3 id=\"3-add-nat-rule\">3. Add NAT rule:</h3>\n<p>Edit <code>/etc/ufw/before.rules</code>, and add this <strong>before</strong> <code>*filter</code>:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\"><code><span class=\"line\"><span>*nat</span></span>\n<span class=\"line\"><span>:POSTROUTING ACCEPT [0:0]</span></span>\n<span class=\"line\"><span>-A POSTROUTING -s 10.0.0.0/24 -o ens3 -j MASQUERADE</span></span>\n<span class=\"line\"><span>COMMIT</span></span>\n<span class=\"line\"><span></span></span></code></pre>\n<blockquote>\n<p>Replace <code>ens3</code> with your actual public network interface if different (check with <code>ip a</code>).</p>\n</blockquote>\n<h3 id=\"4-restart-ufw\">4. Restart UFW:</h3>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\"><code><span class=\"line\"><span>ufw disable</span></span>\n<span class=\"line\"><span>ufw enable</span></span>\n<span class=\"line\"><span></span></span></code></pre>\n<p>Verify:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\"><code><span class=\"line\"><span>ufw status verbose</span></span>\n<span class=\"line\"><span></span></span></code></pre>\n<h2 id=\"starting-wireguard\">Starting WireGuard</h2>\n<p>Start and enable WireGuard:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\"><code><span class=\"line\"><span>systemctl start wg-quick@wg0</span></span>\n<span class=\"line\"><span>systemctl enable wg-quick@wg0</span></span>\n<span class=\"line\"><span></span></span></code></pre>\n<p>Check status:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\"><code><span class=\"line\"><span>wg</span></span>\n<span class=\"line\"><span></span></span></code></pre>\n<h2 id=\"final-notes\">Final Notes</h2>\n<p>Now your WireGuard server is running, secure, and your SSH access is preserved. You can connect from a configured client to <code>10.0.0.1</code> via WireGuard.</p>";

				const frontmatter = {"title":"Wireguard - Installation","summary":"How to install Wireguard on Ubuntu 22.04.5 LTS and configure it with UFW","date":"May 1 2025","draft":false,"tags":["VPN"]};
				const file = "/home/deface/Desktop/orbit/src/content/howto/01-vpn/index.md";
				const url = undefined;
				function rawContent() {
					return "\n## Prerequisites\n\nBefore installing WireGuard, make sure you are running:\n- Ubuntu **22.04.5 LTS (Jammy Jellyfish)**\n- A user with `sudo` privileges\n- Internet access\n\nYou can verify your system version with:\n\n```\nlsb_release -a\n```\n\n## Installing WireGuard\n\nRun the following commands to install WireGuard from the official Ubuntu repositories:\n\n```\napt update\napt install wireguard -y\n```\n\nVerify installation:\n\n```\nwg --version\n```\n\n## Generating Keys\n\nWireGuard uses public/private key pairs. Generate them:\n\n```\nwg genkey | tee privatekey | wg pubkey > publickey\n```\n\n## Configuring the Server\n\nCreate the main config file at `/etc/wireguard/wg0.conf`:\n\n```\n[Interface]\nAddress = 10.0.0.1/24\nPrivateKey = <your-server-private-key>\nListenPort = 51820\n\n[Peer]\nPublicKey = <client-public-key>\nAllowedIPs = 10.0.0.2/32\n```\n\nSet correct permissions:\n\n```\nchmod 600 /etc/wireguard/wg0.conf\n```\n\n## Enabling IP Forwarding\n\nEdit `/etc/sysctl.conf` and uncomment the following line:\n\n```\nnet.ipv4.ip_forward=1\n```\n\nApply it immediately:\n\n```\nsysctl -w net.ipv4.ip_forward=1\n```\n\n## Configuring UFW (Firewall)\n\n### 1. Allow SSH and WireGuard port:\n\n```\nufw allow OpenSSH\nufw allow 51820/udp\n```\n\n### 2. Enable forwarding in UFW:\n\nEdit `/etc/default/ufw`:\n\n```\nDEFAULT_FORWARD_POLICY=\"ACCEPT\"\n```\n\n### 3. Add NAT rule:\n\nEdit `/etc/ufw/before.rules`, and add this **before** `*filter`:\n\n```\n*nat\n:POSTROUTING ACCEPT [0:0]\n-A POSTROUTING -s 10.0.0.0/24 -o ens3 -j MASQUERADE\nCOMMIT\n```\n\n> Replace `ens3` with your actual public network interface if different (check with `ip a`).\n\n### 4. Restart UFW:\n\n```\nufw disable\nufw enable\n```\n\nVerify:\n\n```\nufw status verbose\n```\n\n## Starting WireGuard\n\nStart and enable WireGuard:\n\n```\nsystemctl start wg-quick@wg0\nsystemctl enable wg-quick@wg0\n```\n\nCheck status:\n\n```\nwg\n```\n\n## Final Notes\n\nNow your WireGuard server is running, secure, and your SSH access is preserved. You can connect from a configured client to `10.0.0.1` via WireGuard.\n";
				}
				function compiledContent() {
					return html;
				}
				function getHeadings() {
					return [{"depth":2,"slug":"prerequisites","text":"Prerequisites"},{"depth":2,"slug":"installing-wireguard","text":"Installing WireGuard"},{"depth":2,"slug":"generating-keys","text":"Generating Keys"},{"depth":2,"slug":"configuring-the-server","text":"Configuring the Server"},{"depth":2,"slug":"enabling-ip-forwarding","text":"Enabling IP Forwarding"},{"depth":2,"slug":"configuring-ufw-firewall","text":"Configuring UFW (Firewall)"},{"depth":3,"slug":"1-allow-ssh-and-wireguard-port","text":"1. Allow SSH and WireGuard port:"},{"depth":3,"slug":"2-enable-forwarding-in-ufw","text":"2. Enable forwarding in UFW:"},{"depth":3,"slug":"3-add-nat-rule","text":"3. Add NAT rule:"},{"depth":3,"slug":"4-restart-ufw","text":"4. Restart UFW:"},{"depth":2,"slug":"starting-wireguard","text":"Starting WireGuard"},{"depth":2,"slug":"final-notes","text":"Final Notes"}];
				}

				const Content = createComponent((result, _props, slots) => {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;

					return renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`;
				});

export { Content, compiledContent, Content as default, file, frontmatter, getHeadings, rawContent, url };
