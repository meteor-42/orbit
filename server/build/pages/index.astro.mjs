import { c as createComponent, a as renderTemplate, m as maybeRenderHead, r as renderComponent, d as addAttribute } from '../chunks/astro/server_ckp-fZ9W.mjs';
import { g as getCollection, b as SOCIALS, S as SITE } from '../chunks/consts_CHbO495B.mjs';
import { $ as $$PageLayout } from '../chunks/PageLayout_BiBushs7.mjs';
import { A as ArrowCard } from '../chunks/ArrowCard_BiV0lFKs.mjs';
import 'clsx';
export { renderers } from '../renderers.mjs';

var __freeze$1 = Object.freeze;
var __defProp$1 = Object.defineProperty;
var __template$1 = (cooked, raw) => __freeze$1(__defProp$1(cooked, "raw", { value: __freeze$1(cooked.slice()) }));
var _a$1;
const $$TwinklingStars = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate(_a$1 || (_a$1 = __template$1(["", '<svg id="twinkle-star" class="template" width="149" height="149" viewBox="0 0 149 149" fill="none" xmlns="http://www.w3.org/2000/svg" class="absolute left-full animate-twinkle"> <circle cx="74" cy="74" r="11" fill="white"></circle> <rect y="141.421" width="200" height="10" transform="rotate(-45 0 141.421)" fill="url(#paint0_linear_4_2)"></rect> <rect x="7.07107" width="200" height="10" transform="rotate(45 7.07107 0)" fill="url(#paint1_linear_4_2)"></rect> <defs> <linearGradient id="paint0_linear_4_2" x1="0" y1="146.421" x2="200" y2="146.421" gradientUnits="userSpaceOnUse"> <stop stop-color="#1E1E1E"></stop> <stop offset="0.445" stop-color="white"></stop> <stop offset="0.58721" stop-color="white"></stop> <stop offset="1" stop-color="#1E1E1E"></stop> </linearGradient> <linearGradient id="paint1_linear_4_2" x1="7.07107" y1="5" x2="207.071" y2="5" gradientUnits="userSpaceOnUse"> <stop stop-color="#1E1E1E"></stop> <stop offset="0.42" stop-color="white"></stop> <stop offset="0.555" stop-color="white"></stop> <stop offset="1" stop-color="#1E1E1E"></stop> </linearGradient> </defs> </svg> <script>\n  // Generate a twinkle star and append it to the galaxy, remove it after animation.\n  function generateTwinkleStar() {\n    const twinkleStarTemplate = document.getElementById("twinkle-star")\n    if (!twinkleStarTemplate) { return; }\n    // Clone the twinkle star template and set its attributes.\n    const twinkleStar = twinkleStarTemplate.cloneNode(true);\n    twinkleStar.style.position = "absolute";\n    twinkleStar.style.left = Math.floor(Math.random() * window.innerWidth) + "px";\n    twinkleStar.style.top = Math.floor(Math.random() * (window.innerHeight/3)) + "px";\n    twinkleStar.style.width = window.innerWidth < 768 ? Math.floor(Math.random() * (15 - 7.5 + 1) + 7.5) : Math.floor(Math.random() * (30 - 15 + 1) + 15) + "px";\n    twinkleStar.style.height = twinkleStar.style.width;\n    twinkleStar.classList.add("twinkle");\n    document.getElementById("galaxy").appendChild(twinkleStar);\n\n    // Remove the twinkle star after the animation is completed.\n    setTimeout(() => {\n      twinkleStar.remove();\n    }, 2500);\n  }\n\n  setInterval(generateTwinkleStar, 5000);\n<\/script>'])), maybeRenderHead());
}, "/home/deface/Desktop/orbit/src/components/TwinklingStars.astro", void 0);

const $$MeteorShower = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate`${maybeRenderHead()}<div id="meteors"> <!-- rotations defined in base.css & tailwind.config.mjs --> <div class="shower ur"></div> <div class="shower dr"></div> <div class="shower dl"></div> <div class="shower ul"></div> </div> `;
}, "/home/deface/Desktop/orbit/src/components/MeteorShower.astro", void 0);

var __freeze = Object.freeze;
var __defProp = Object.defineProperty;
var __template = (cooked, raw) => __freeze(__defProp(cooked, "raw", { value: __freeze(cooked.slice()) }));
var _a;
const $$Index = createComponent(async ($$result, $$props, $$slots) => {
  const projects = (await getCollection("projects")).filter((project) => !project.data.draft).sort((a, b) => b.data.date.getTime() - a.data.date.getTime()).slice(0, 3);
  const response = await fetch("https://api.geckoterminal.com/api/v2/networks/arbitrum/tokens/0x912ce59144191c1204e64559fe8253a0e49e6548");
  const data = await response.json();
  const price_usd = data.attributes.price_usd;
  return renderTemplate`${renderComponent($$result, "PageLayout", $$PageLayout, { "title": "Home", "description": SITE.DESCRIPTION }, { "default": async ($$result2) => renderTemplate(_a || (_a = __template(["  ", '<div class="absolute inset-0 block dark:hidden"> <div id="particles1" class="fixed inset-0"></div> <div id="particles2" class="fixed inset-0"></div> <div id="particles3" class="fixed inset-0"></div> </div>  <div class="absolute inset-0 bg-black hidden dark:block"> <div id="stars1" class="fixed inset-0"></div> <div id="stars2" class="fixed inset-0"></div> <div id="stars3" class="fixed inset-0"></div> </div>  <div id="galaxy" class="fixed inset-0"> <div class="hidden dark:block"> ', " ", ' </div> </div> <script src="/js/bg.js"><\/script>  <section class="relative h-screen w-full"> <div id="planetcont" class="animate absolute inset-0 top-1/4 overflow-hidden"> <div id="crescent" class="absolute top-0 left-1/2 -translate-x-1/2 w-[250vw] min-h-[100vh] aspect-square rounded-full p-[1px] bg-gradient-to-b from-black/25 dark:from-white/75 from-0% to-transparent to-5%"> <div id="planet" class="w-full h-full bg-white dark:bg-black rounded-full p-[1px] overflow-hidden flex justify-center"> <div id="blur" class="w-full h-20 rounded-full bg-neutral-900/25 dark:bg-white/25 blur-3xl"></div> </div> </div> </div> <div class="animate absolute h-full w-full flex items-center justify-center"> <div class="p-5 text-center"> <p class="animated text-sm md:text-sm lg:text-sm font-thin opacity-75 tracking-wide">\n..:.:: B R \u039E \u039B K \u2591 G R \u0394 V I T Y ::.:..\n</p> <p class="animated text-2xl md:text-3xl lg:text-6xl uppercase mt-5 text-black dark:text-white">\nM 3 T 3 0 R - 42\n</p> <p class="animated text-sm md:text-base lg:text-lg font-mono tracking-widest mt-1">\n- InfraPay Token : ', ' USDC -\n</p> <p class="animated text-sm md:text-base lg:text-sm opacity-75 mt-5">\nUse M3T30R to pay for VPN access, services, <br class="hidden md:inline"> and tools across the Arbitrum-based ecosystem.\n</p> <p class="animated text-xs md:text-sm lg:text-base mt-2 opacity-60">\nContract:\n<a href="https://arbiscan.io/address/0xf181d482b0c3c470a2f7f8913d4a884665a00000" target="_blank" class="animated text-sm md:text-base lg:text-lg font-medium text-black dark:text-white mt-1 underline decoration-purple-500 decoration-2 underline-offset-4">\n0xf181\u202600000\n</a> </p> <div id="ctaButtons" class="animated flex flex-wrap gap-4 justify-center mt-5"> <a href="/howto" class="py-2 px-6 rounded text-xs md:text-sm lg:text-base bg-black dark:bg-white text-white dark:text-black hover:opacity-75 blend inline-flex items-center justify-center">\nRead HowTo\n</a> <a href="/projects" class="py-2 px-6 rounded text-xs md:text-sm lg:text-base border border-black/25 dark:border-white/25 hover:bg-black/5 hover:dark:bg-white/15 blend inline-flex items-center justify-center">\nView Projects\n</a> </div> </div> <!-- Scroll Indicator --> <div class="absolute bottom-6 left-1/2 -translate-x-1/2 animate-bounce text-4xl opacity-75"> <a href="#about" aria-label="Scroll Down">\n\u2193\n</a> </div> </div></section> <div class="relative bg-white dark:bg-black"> <div class="mx-auto max-w-screen-sm p-5 space-y-24 pb-16"> <section class="animate"> <p class="font-semibold text-black dark:text-white pb-5">\nGitHub Activity\n</p> <div class=""> <img src="https://ghchart.rshah.org/ellermister" alt="GitHub Activity Chart" class="w-full h-auto dark:invert" loading="lazy"> </div> </section> <!-- About Section --> <section class="animate" id="about"> <article class="text-sm"> <p>Our token powers access and payments for blockchain-based microservices on Arbitrum, enabling essential tools for digital privacy and censorship resistance, such as:</p> <ul> <li><b>WireGuard VPN</b> \u2013 secure, token-gated access to VPN nodes</li> <li><b>Telegram Proxy</b> \u2013 bypass regional restrictions with proxy nodes</li> <li><b>Blockchain Monitor</b> \u2013 real-time token-gated alerts for on-chain events</li> </ul> <p class="text-sm italic text-gray-500"> <span class="hover:underline cursor-pointer">...and more</span> </p> </article> </section> <!-- Project Preview Section --> <section class="animate"> <div class="space-y-4"> <div class="flex justify-between"> <p class="font-semibold text-black dark:text-white">\nIn Progress\n</p> <a href="/projects" class="w-fit col-span-3 group flex gap-1 items-center underline decoration-[.5px] decoration-black/25 dark:decoration-white/50 hover:decoration-black dark:hover:decoration-white text-black dark:text-white underline-offset-2 blend"> <span class="text-black/75 dark:text-white/75 group-hover:text-black group-hover:dark:text-white blend">\nAll Projects\n</span> </a> </div> <ul class="space-y-4"> ', ` </ul> </div> </section> <!-- Contact Section --> <section class="animate"> <div> <p class="font-semibold text-black dark:text-white">
Let's Connect
</p> <p>
Join our community on:
</p> <div class="grid grid-cols-4 gap-y-2 mt-4 auto-cols-min"> `, " </div> </div></section> </div> </div> "])), maybeRenderHead(), renderComponent($$result2, "TwinklingStars", $$TwinklingStars, {}), renderComponent($$result2, "MeteorShower", $$MeteorShower, {}), price_usd, projects.map((project) => renderTemplate`<li> ${renderComponent($$result2, "ArrowCard", ArrowCard, { "entry": project })} </li>`), SOCIALS.map((social) => renderTemplate`<div class="col-span-1 flex items-center gap-1"> <span class="whitespace-nowrap truncate"> ${social.NAME} </span> </div>
              <div class="col-span-3 truncate"> <a${addAttribute(social.HREF, "href")} target="_blank" class="w-fit col-span-3 group flex gap-1 items-center underline decoration-[.5px] decoration-black/25 dark:decoration-white/50 hover:decoration-black dark:hover:decoration-white text-black dark:text-white underline-offset-2 blend"> <span class="text-black/75 dark:text-white/75 group-hover:text-black group-hover:dark:text-white blend"> ${social.TEXT} </span> </a> </div>`)) })}`;
}, "/home/deface/Desktop/orbit/src/pages/index.astro", void 0);

const $$file = "/home/deface/Desktop/orbit/src/pages/index.astro";
const $$url = "";

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
  __proto__: null,
  default: $$Index,
  file: $$file,
  url: $$url
}, Symbol.toStringTag, { value: 'Module' }));

const page = () => _page;

export { page };
